version: '3.8'

services:

  backend:
    build:
      context: ./backend
    container_name: employee_system_backend
    restart: unless-stopped
    ports:
      - 8080:8080
    environment:
      POSTGRES_HOST: database
      KAFKA_HOST: kafka
    depends_on:
      database:
        condition: service_healthy

  ms-reset-password:
    build:
      context: ./ms-reset-password
    container_name: ms_reset_password
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      POSTGRES_HOST: database
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      KAFKA_HOST: kafka
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres
    container_name: employee_system_database
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: employee-db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      timeout: 10s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: unless-stopped
    ports:
      - 29092:29092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1