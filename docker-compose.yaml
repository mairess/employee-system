version: '3.8'

services:

  backend:
    build:
      context: ./backend
    container_name: employee_system_backend
    restart: unless-stopped
    ports:
      - 8080:8080
    environment:
      POSTGRES_HOST: database
      KAFKA_HOST: kafka
    depends_on:
      database:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
    container_name: employee_system_frontend
    restart: unless-stopped
    ports:
      - 3000:3000
    working_dir: /app
    volumes:
      - ./frontend:/app

  ms-email:
    build:
      context: ./ms-email
    container_name: ms_email
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      POSTGRES_HOST: database
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      KAFKA_HOST: kafka
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres
    container_name: employee_system_database
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: employee-db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      timeout: 10s
      retries: 5

  kafka:
    image: apache/kafka:3.8.0
    container_name: kafka
    restart: unless-stopped
    ports:
      - 29092:29092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1